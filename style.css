
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

h1{
    color: rgb(31, 233, 189);
    font-size: 25px;
}

body{
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-family: monospace;
    background: rgba(27, 27, 27, 0.966);
    color: rgb(245, 245, 245);
}

.form{
    width: 70%; /* width of the div box*/
   position: relative;
   height: 50px;
   overflow: hidden;

  
}

.form > input{
    width: 100%;  
    height: 100%; 
    /* width & height of the input field  and it covers the container(div = form) completly */
    padding-top: 20px; 
    border: none;
    outline:none;
    background: none;
    font-size: 17px;
    color: rgb(216, 216, 216);
}

.form .label-name{
    position: absolute;
    bottom: 0px;
    left: 0%;
    width: 100%;
    height: 100%;
    /* we cannot give an input after applying  this css so we can use "pointer-events" to enable the input field hiding behind the label 'Name' */
    pointer-events: none;
    border-bottom: 1px solid rgb(172, 163, 163);
    font-size: 17px;
    font-weight: bold;

}

.form .label-name::after {

    /* adding extra styilig after the elment label */

    content: " ";
    /* adds extra content after the label element 'Name' */
    position: absolute;
    left: 0px;
    height: 100%;
    width: 100%; 
    border-bottom: 3px solid rgb(49, 243, 169);
    transform: translateX(-100% );
    transition: transform 0.3s ease;
    font-size: 15px;

    /* pushes the line out of the container div= form 
    
    only transform property we want to animate*/

}

.content-name{
    position: absolute;
    bottom: 5px;
    left: 0px;
    transition: all 0.3s ease;
}

/* Animation to the form */

.form input:focus + .label-name .content-name, .form input:valid + .label-name .content-name{
    /* 
    :valid is true if any text is available in the field otherwise false. 
    
    :focus means when the input box is selected
    */
    transform: translateY(-150%);
    /* moves the 'Name' upward from the input field 
      content-name
    */
    font-size: 14px;
    color: rgb(241, 148, 42);

}
.form input:focus + .label-name::after, .form input:valid + .label-name::after{

    transform: translateX(0%);
}

form{
    width: 700px;
    height: 500px;
    padding:0;
    margin: 0;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
}

button{
  border: none;
  padding: 10px;
  border-radius: 4px;
  background: rgba(128, 255, 0, 0.548);
  outline: none;
}

#btn{
    border: 0px;
    padding: 19px;
    margin: 10px;
    background: rgba(115, 117, 117, 0.705);
    color: rgb(83, 235, 209);
    border-radius: 10px;
    font-weight: bold;
    font-size: 17px;
    font-family: monospace;
    outline: none;
    transition: all 0.3s ease;
    
}

#btn:hover{
    box-shadow: 1px 1px 1px white;
    padding: 19.2px;
}

/* Customize the label (the container) */
.container {
    display:inline-block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 18px;
    margin-left: 10px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  
  /* Hide the browser's default radio button */
  .container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  /* Create a custom radio button */
  .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: rgb(61, 61, 61);
    border-radius: 50%;
  }
  
  /* On mouse-over, add a grey background color */
  .container:hover input ~ .checkmark {
    background-color: rgba(29, 226, 210, 0.657);
  }
  
  /* When the radio button is checked, add a blue background */
  .container input:checked ~ .checkmark {
    background-color: rgba(53, 238, 167, 0.904);
  }
  
  /* Create the indicator (the dot/circle - hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the indicator (dot/circle) when checked */
  .container input:checked ~ .checkmark:after {
    display:inline-block;
  }
  
  /* Style the indicator (dot/circle) */
  .container .checkmark:after {
    top: 9px;
    left: 9px;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: rgb(34, 34, 34);
  }

  .hidden{
    visibility: hidden;
  }